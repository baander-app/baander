services:
  nginx:
    image: martinjuul/baander-nginx:latest
    container_name: baander-nginx
    build:
      context: ./docker/
      args:
        BUILD_ARGUMENT_ENV: dev
      dockerfile: ./nginx/Dockerfile
    restart: unless-stopped
    ports:
      - "${WEB_PORT_HTTP}:80"
      - "${WEB_PORT_TLS}:443"
    networks:
      - baander-backtier
    volumes:
      - ./:/var/www/html:ro,cached
      - ./docker/dev/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./cert.pem:/etc/nginx/certificates/cert.pem:ro
      - ./key.pem:/etc/nginx/certificates/key.pem:ro
    depends_on:
      - app

  app:
    image: martinjuul/baander-app:latest
    container_name: baander-app
    build:
      context: .
      args:
        BUILD_ARGUMENT_ENV: dev
        HOST_UID: ${HOST_UID}
        HOST_GID: ${HOST_GID}
        XDEBUG_CONFIG: ${XDEBUG_CONFIG}
        XDEBUG_VERSION: ${XDEBUG_VERSION}
      dockerfile: ./Dockerfile
    ulimits:
      nofile:
        soft: 10000
        hard: 10000
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    environment:
      - OTEL_PHP_AUTOLOAD_ENABLED=false
      - OTEL_ENABLED=true
      - OTEL_EXPORTER_OTLP_INSECURE=true
      - OTEL_EXPORTER_OTLP_TIMEOUT=30
      - OTEL_EXPORTER_OTLP_ENDPOINT=https://otel.juul.localdomain
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=https://otel.juul.localdomain/v1/traces
      - OTEL_EXPORTER_OTLP_PROTOCOL=http/protobuf
      - OTEL_EXPORTER_OTLP_TIMEOUT=30
      - OTEL_PROPAGATORS=tracecontext,baggage
      - OTEL_SERVICE_NAME=baander-backend
      - OTEL_SERVICE_VERSION=1.0.0
      - OTEL_LOGS_PROCESSOR=batch
      - OTEL_LOGS_EXPORTER=otlp
      - OTEL_TRACES_PROCESSOR=batch
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_PROCESSOR=batch
      - OTEL_METRICS_EXPORTER=otlp
    volumes:
      - /mnt/c/baander-library:/storage/baander-library
      - ./:/var/www/html:cached
      - ./docker/general/supervisord.conf:/etc/supervisor/conf.d/supervisord.conf:ro
    networks:
      - baander-backtier

  postgres:
    image: postgres:17.5-bookworm
    container_name: baander-postgres
    restart: unless-stopped
    networks:
      - baander-backtier
    ports:
      - "127.0.0.1:5432:5432"
    shm_size: 128mb
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}

  redis:
    image: redis/redis-stack-server:edge
    container_name: baander-redis
    restart: unless-stopped
    networks:
      - baander-backtier
    ports:
      - "127.0.0.1:6379:6379"

#  buggregator:
#    image: ghcr.io/buggregator/server:latest
#    container_name: baander-buggregator
#    restart: unless-stopped
#    networks:
#      - baander-backtier
#    ports:
#      - "127.0.0.1:8000:8000"
#      - "127.0.0.1:1025:1025"
#      - "127.0.0.1:9912:9912"
#      - "127.0.0.1:9913:9913"

networks:
  baander-backtier:
    name: baander-backtier
    external: true
